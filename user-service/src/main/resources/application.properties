spring.application.name=user-service
server.port=8762

spring.datasource.url=jdbc:postgresql://localhost:5432/BDA_USER
spring.datasource.username=BDA_USER
spring.datasource.password=K7fTnE2P
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=BDA_DEV
spring.data.mongodb.repositories.enabled=true
spring.data.mongodb.ddl-auto=update

# spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=example
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# spring.data.mongodb.url=mongodb://host.docker.internal:27017/BDA_DEV
#spring.data.mongodb.username=root
#spring.data.mongodb.password=example
#spring.data.mongodb.repositories.enabled=true
#spring.data.mongodb.ddl-auto=update

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=group_basketball_1
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.graphql.graphiql.enabled=true
